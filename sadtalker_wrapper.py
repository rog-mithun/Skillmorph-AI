import subprocess
import os
import shutil
from pydub import AudioSegment

def run_sadtalker(image_path, audio_path, output_path="sadtalker_output.mp4", max_duration=10):
    from pathlib import Path
    import subprocess, shutil, os

    source_image_dir = "SadTalker/examples/source_image"
    audio_dir = "SadTalker/examples/driven_audio"
    result_dir = "SadTalker/results"

    # Create directories
    os.makedirs(source_image_dir, exist_ok=True)
    os.makedirs(audio_dir, exist_ok=True)
    os.makedirs(result_dir, exist_ok=True)

    # Clear old files
    for f in Path(source_image_dir).glob("*"): f.unlink()
    for f in Path(audio_dir).glob("*"): f.unlink()

    # Copy image
    shutil.copy(image_path, os.path.join(source_image_dir, "avatar.png"))

    # Trim audio to 10 seconds max
    audio = AudioSegment.from_file(audio_path)
    trimmed_audio = audio[:max_duration * 1000]
    trimmed_audio_path = os.path.join(audio_dir, "audio.mp3")
    trimmed_audio.export(trimmed_audio_path, format="mp3")

    # Run SadTalker inference
    command = [
        "python", "inference.py",
        "--driven_audio", "examples/driven_audio/audio.mp3",
        "--source_image", "examples/source_image/avatar.png",
        "--result_dir", "results",
        "--enhancer", "gfpgan",
        "--preprocess", "extcrop",
        "--size", "512"
    ]

    subprocess.run(command, cwd="SadTalker")

    # Get result
    video_files = [f for f in os.listdir(result_dir) if f.endswith(".mp4")]
    if not video_files:
        raise Exception("‚ùå No video was generated by SadTalker.")

    latest_video = max(
        [os.path.join(result_dir, f) for f in video_files],
        key=os.path.getmtime
    )
    shutil.copy(latest_video, output_path)
    return output_path